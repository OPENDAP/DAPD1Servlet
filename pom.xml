<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.opendap.d1</groupId>
  <artifactId>d1Servlet</artifactId>
  <!-- <packaging>jar</packaging> -->
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>d1Servlet</name>  <!-- the project name in Eclipse, Idea, etc., not the servlet name. -->

  <url>http://maven.apache.org</url>

  <!-- The 'maven way' to exclude some files from the compilation. Use the 'compile'
      plugin and set an exclude. This can also be done using a 'build' element. -->
  <build>
    <plugins>

      <!-- This excludes some files from compilation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          
          <excludes>
            <exclude>**/DAPHandler.java</exclude>
          </excludes>
        </configuration>
      </plugin>
           
      <!-- This builds a jar in addition to the .war file specified
          above in the top-level packaging eleement -->
      <!-- plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>make-a-jar</id>
            <phase>compile</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin -->

      <!-- This fiddles with the install location of the jar file -->
      <!-- plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <packaging>jar</packaging>
              <artifactId>${project.artifactId}</artifactId>
              <groupId>${project.groupId}</groupId>
              <version>${project.version}</version>
              <file>
                ${project.build.directory}/${project.artifactId}-${project.version}.jar
              </file>
            </configuration>
          </execution>
        </executions>
      </plugin -->
      
    </plugins>
        
    <!-- TODO Make this 'd1'? -->
    <finalName>DAPD1Servlet</finalName>  <!-- This is the name of the servlet/war-file -->
  </build>
    
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <repositories>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <!-- This picks up the stuff from my other project that holds the
        database with URLs, D1 metadata, ... -->
      <groupId>org.opendap.d1</groupId>
      <artifactId>DatasetsDatabase</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <!-- Changed 'compile' to 'provided' so that the resulting war file
           did not include the servlet-api-2.5.jar which made tomcat fail
           when it loaded the servlet. -->
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <!-- This dep is taken care of by the dataone dep that follows, but I was
        testing a simple version of the servlet that had only log4j in WEB0INF/lib
        and I've decided this might come in handy in the future. jhrg 5/6/14 -->
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>

    <dependency>            
      <artifactId>d1_portal</artifactId>
      <groupId>org.dataone</groupId>
      <version>1.3.0-SNAPSHOT</version>
      <type>jar</type>
    </dependency>
  </dependencies>

</project>
